apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels: 
    app: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      {{- if .Values.dockerRegistry.enabled }}
      imagePullSecrets:
      - name: {{ .Values.dockerRegistry.name }}
      {{- end }}
      containers:
      - name: {{ .Values.app.name }}
        image: {{ .Values.app.image }}:{{ .Values.app.tag }}
        imagePullPolicy: Always
        ports:
        - name: vproapp-port
          containerPort: {{ .Values.app.port }}
      initContainers:
      - name: init-mydb
        image: {{ .Values.initContainers.busybox.image }}:{{ .Values.initContainers.busybox.tag }}
        command: ['sh', '-c', 'until nslookup {{ .Values.database.name }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;']
      - name: init-memcache
        image: {{ .Values.initContainers.busybox.image }}:{{ .Values.initContainers.busybox.tag }}
        command: ['sh', '-c', 'until nslookup vprocache01.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done;']